#!/bin/sh

# check whether all input files will be available:
if [ ! -e examples/mdrun-test/conf.gro ]; then
    echo "This example script must be run from within the copernicus base directory"
    exit 1
fi

# start the project
./cpcc start test
# import the gromacs module with grompp and mdrun functions
./cpcc import gromacs
# add the grompp and mdrun function instances
./cpcc instance gromacs::grompp grompp
./cpcc instance gromacs::mdrun mdrun
./cpcc instance gromacs::mdrun_tune tune
# activate the function instance
./cpcc activate 

# start a transaction: all the 'set' and 'connect' commands following this
# will be executed as one atomic operation upon the cpcc commit command.
./cpcc transact
# connect the tpr output of grompp to the tpr input of mdrun
./cpcc connect grompp:out.tpr mdrun:in.tpr
# set the grompp inputs
./cpcc set-file grompp:in.conf examples/mdrun-test/conf.gro
#./cpcc set-file grompp:in.mdp  examples/mdrun-test/grompp.mdp
./cpcc set-file grompp:in.top  examples/mdrun-test/topol.top



./cpcc set-file tune:in.conf examples/mdrun-test/conf.gro
./cpcc set-file tune:in.mdp  examples/mdrun-test/grompp.mdp
./cpcc set-file tune:in.top  examples/mdrun-test/topol.top
# 
./cpcc set tune:in.settings[0].name nsteps
./cpcc set tune:in.settings[0].value 10000
./cpcc set tune:in.settings[1].name integrator
./cpcc set tune:in.settings[1].value md

./cpcc connect tune:out.mdp grompp:in.mdp
./cpcc connect tune:out.resources mdrun:in.resources

#./cpcc set mdrun:in.resources.max.cores 4

./cpcc commit

